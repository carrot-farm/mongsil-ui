:root {
  --color-base-deg: 216;
  --color-primary-deg: 216;
  --color-base: hsl(var(--color-base-deg) 22% 95%);
  --color-primary: hsl(var(--color-primary-deg) 100% 72%);
  --color-secondary: hsl(360deg 100% 72%);
  --color-error: hsl(0deg 84% 60%);
  --color-warning: hsl(38deg 92% 50%);
  --easing: 200ms ease-in-out;
  --emboss-0: 0px 0px 0px hsl(var(--color-base-deg) 3% 5% / 6%),
    0px 0px 0px hsl(var(--color-base-deg) 3% 5% / 10%),
    0px 0px 0px hsl(var(--color-base-deg) 3% 100% / 80%),
    0px 0px 0px hsl(var(--color-base-deg) 5% 100% / 80%);
  --emboss-100: 1px 1px 1px hsl(var(--color-base-deg) 3% 5% / 6%),
    2px 2px 4px hsl(var(--color-base-deg) 3% 5% / 10%),
    -1px -1px 1px hsl(var(--color-base-deg) 3% 100% / 80%),
    -2px -2px 4px hsl(var(--color-base-deg) 5% 100% / 80%);
  --emboss-200: 2px 2px 2px hsl(var(--color-base-deg) 3% 5% / 6%),
    4px 4px 8px hsl(var(--color-base-deg) 3% 5% / 10%),
    -2px -2px 2px hsl(var(--color-base-deg) 3% 100% / 80%),
    -4px -4px 8px hsl(var(--color-base-deg) 5% 100% / 80%);
  --emboss-300: 3px 3px 3px hsl(var(--color-base-deg) 3% 5% / 6%),
    5px 5px 12px hsl(var(--color-base-deg) 3% 5% / 10%),
    -3px -3px 3px hsl(var(--color-base-deg) 3% 100% / 80%),
    -5px -5px 12px hsl(var(--color-base-deg) 5% 100% / 80%);
  --emboss-400: 4px 4px 4px hsl(var(--color-base-deg) 3% 5% / 6%),
    6px 6px 16px hsl(var(--color-base-deg) 3% 5% / 10%),
    -4px -4px 4px hsl(var(--color-base-deg) 3% 100% / 80%),
    -6px -6px 16px hsl(var(--color-base-deg) 5% 100% / 80%);
  --emboss-500: 5px 5px 5px hsl(var(--color-base-deg) 3% 5% / 6%),
    7px 7px 20px hsl(var(--color-base-deg) 3% 5% / 10%),
    -5px -5px 5px hsl(var(--color-base-deg) 3% 100% / 80%),
    -7px -7px 20px hsl(var(--color-base-deg) 5% 100% / 80%);
  --dent-0: inset 0px 0px 0px hsl(var(--color-base-deg) 3% 5% / 6%),
    inset 0px 0px 0px hsl(var(--color-base-deg) 3% 5% / 10%),
    inset 0px -0px 0px hsl(var(--color-base-deg) 3% 100% / 80%),
    inset 0px 0px 0px hsl(var(--color-base-deg) 5% 100% / 80%);
  --dent-100: inset 1px 1px 1px hsl(var(--color-base-deg) 3% 5% / 6%),
    inset 2px 2px 4px hsl(var(--color-base-deg) 3% 5% / 10%),
    inset -1px -1px 1px hsl(var(--color-base-deg) 3% 100% / 80%),
    inset -2px -2px 4px hsl(var(--color-base-deg) 5% 100% / 80%);
  --dent-200: inset 2px 2px 2px hsl(var(--color-base-deg) 3% 5% / 6%),
    inset 4px 4px 8px hsl(var(--color-base-deg) 3% 5% / 10%),
    inset -2px -2px 2px hsl(var(--color-base-deg) 3% 100% / 80%),
    inset -4px -4px 8px hsl(var(--color-base-deg) 5% 100% / 80%);
  --dent-300: inset 3px 3px 3px hsl(var(--color-base-deg) 3% 5% / 6%),
    inset 5px 5px 12px hsl(var(--color-base-deg) 3% 5% / 10%),
    inset -3px -3px 3px hsl(var(--color-base-deg) 3% 100% / 80%),
    inset -5px -5px 12px hsl(var(--color-base-deg) 5% 100% / 80%);
  --dent-400: inset 4px 4px 4px hsl(var(--color-base-deg) 3% 5% / 6%),
    inset 6px 6px 16px hsl(var(--color-base-deg) 3% 5% / 10%),
    inset -4px -4px 4px hsl(var(--color-base-deg) 3% 100% / 80%),
    inset -6px -6px 16px hsl(var(--color-base-deg) 5% 100% / 80%);
  --dent-500: inset 5px 5px 5px hsl(var(--color-base-deg) 3% 5% / 6%),
    inset 7px 7px 20px hsl(var(--color-base-deg) 3% 5% / 10%),
    inset -5px -5px 5px hsl(var(--color-base-deg) 3% 100% / 80%),
    inset -7px -7px 20px hsl(var(--color-base-deg) 5% 100% / 80%);
  /** 하이라이드 비활성화 */
  -webkit-tap-highlight-color: transparent;
}

/*! tailwindcss v2.2.19 | MIT License | https://tailwindcss.com */

/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
::before,
::after {
  box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
  -moz-tab-size: 4;
  tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
  margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
  font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select { /* 1 */
  text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type='button'],
[type='submit'] {
  -webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

/**
Restore the focus styles unset by the previous rule.
*/

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
  padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 1 */
  line-height: 1.5; /* 2 */
}

/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: currentColor; /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

button {
  cursor: pointer;
}

/**
 * Override legacy focus reset from Normalize with modern Firefox focus styles.
 *
 * This is actually an improvement over the new defaults in Firefox in our testing,
 * as it triggers the better focus styles even for links, which still use a dotted
 * outline in Firefox by default.
 */

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

/**
 * Ensure the default browser behavior of the `hidden` attribute.
 */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-opacity: 1;
  border-color: rgba(229, 231, 235, var(--tw-border-opacity));
}

.emboss-100 {
  box-shadow: var(--emboss-100);
}

.emboss-200 {
  box-shadow: var(--emboss-200);
}

.emboss-300 {
  box-shadow: var(--emboss-300);
}

.emboss-400 {
  box-shadow: var(--emboss-400);
}

.emboss-500 {
  box-shadow: var(--emboss-500);
}

.dent-100 {
  box-shadow: var(--dent-100);
}

.dent-200 {
  box-shadow: var(--dent-200);
}

.dent-300 {
  box-shadow: var(--dent-300);
}

.dent-400 {
  box-shadow: var(--dent-400);
}

.dent-500 {
  box-shadow: var(--dent-500);
}

/* ===== scroll bar ===== */

::-webkit-scrollbar {
  width: 8px;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

/* ===== button ===== */

.Mongsil-button-root {
  transition-property: box-shadow;
  transition-timing-function: ease-in-out;
  transition-duration: 200ms;
  border-radius: 0.25rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-weight: 600;
}

.Mongsil-button-root.disabled {
  cursor: not-allowed;
  --tw-bg-opacity: 1;
  background-color: rgba(229, 231, 235, var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(156, 163, 175, var(--tw-text-opacity));
}

.Mongsil-button-root.emboss {
  box-shadow: var(--emboss-300);
}

.Mongsil-button-root.emboss.pressed {
  box-shadow: var(--emboss-0);
}

.Mongsil-button-root.dent {
  box-shadow: var(--dent-0);
}

.Mongsil-button-root.dent.pressed {
  box-shadow: var(--dent-200);
}

.Mongsil-button-root > .Mongsil-button-label {
  transition-property: transform;
  transition-timing-function: ease-in-out;
  transition-duration: 200ms;
}

.Mongsil-button-root.pressed > .Mongsil-button-label {
  transform: scale(0.95);
}

/* ===== input ===== */

.Mongsil-input-root {
  border-radius: 0.25rem;
  border-width: 1px;
  background-color: transparent;
  box-shadow: var(--dent-0);
  transition-property: box-shadow;
  transition-timing-function: ease-in-out;
  transition-duration: 200ms;
  transition-property: border;
  transition-timing-function: ease-in-out;
  transition-duration: 200ms;
  --tw-border-opacity: 1;
  border-color: rgba(209, 213, 219, var(--tw-border-opacity));
}

.Mongsil-input-root.focused {
  box-shadow: var(--dent-100);
  border-color: transparent;
}

.Mongsil-input-root > .Mongsil-input-base {
  width: 100%;
  -webkit-appearance: none;
          appearance: none;
  background-color: transparent;
}

.Mongsil-input-root > .Mongsil-input-base:focus {
  background-color: transparent;
}

.Mongsil-input-root > .Mongsil-input-base {
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  --tw-text-opacity: 1;
  color: rgba(55, 65, 81, var(--tw-text-opacity));
}

.Mongsil-input-root > .Mongsil-input-base:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.Mongsil-input-root.disabled, .Mongsil-input-root.disabled > .Mongsil-input-base {
  cursor: not-allowed;
  --tw-bg-opacity: 1;
  background-color: rgba(229, 231, 235, var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(156, 163, 175, var(--tw-text-opacity));
}

/* ===== checkbox ===== */

.Mongsil-checkbox-root {
  position: relative;
  display: inline-flex;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  padding: 0.5rem;
}

.Mongsil-checkbox-root > .Mongsil-checkbox-base {
  -webkit-appearance: none;
          appearance: none;
}

.Mongsil-checkbox-root > .Mongsil-checkbox-checker {
  display: inline-flex;
  height: 1.25rem;
  width: 1.25rem;
  align-items: center;
  justify-content: center;
  border-radius: 0.25rem;
  background-color: transparent;
  --tw-text-opacity: 1;
  color: rgba(209, 213, 219, var(--tw-text-opacity));
  transition: box-shadow var(--easing), color var(--easing);
}

.Mongsil-checkbox-root > .Mongsil-checkbox-checker.emboss, .Mongsil-checkbox-root > .Mongsil-checkbox-checker.emboss-outline, .Mongsil-checkbox-root > .Mongsil-checkbox-checker.emboss-fill {
  box-shadow: var(--emboss-200);
}

.Mongsil-checkbox-root > .Mongsil-checkbox-checker.emboss-outline {
  border-width: 1px;
  border-color: transparent;
  transition: border var(--easing), color 200ms var(--easing),
      box-shadow var(--easing);
}

.Mongsil-checkbox-root > .Mongsil-checkbox-checker.emboss-fill {
  transition: background-color 200ms ease-in-out, color 200ms ease-in-out,
      box-shadow 200ms ease-in-out;
}

.Mongsil-checkbox-root.checked > .Mongsil-checkbox-checker {
  box-shadow: var(--emboss-0);
}

.Mongsil-checkbox-root.checked > .Mongsil-checkbox-checker.emboss {
  color: var(--color-primary);
}

.Mongsil-checkbox-root.checked > .Mongsil-checkbox-checker.emboss-fill {
  background-color: var(--color-primary);
  font-size: 1rem;
  line-height: 1.5rem;
  color: var(--color-base);
}

.Mongsil-checkbox-root.checked > .Mongsil-checkbox-checker.emboss-outline {
  --tw-border-opacity: 1;
  border-color: rgba(209, 213, 219, var(--tw-border-opacity));
  color: var(--color-primary);
}

/* dent */

.Mongsil-checkbox-root > .Mongsil-checkbox-checker.dent, .Mongsil-checkbox-root > .Mongsil-checkbox-checker.dent-outline {
  box-shadow: var(--dent-0);
}

.Mongsil-checkbox-root.checked > .Mongsil-checkbox-checker.dent, .Mongsil-checkbox-root.checked > .Mongsil-checkbox-checker.dent-outline {
  box-shadow: var(--dent-100);
}

.Mongsil-checkbox-root > .Mongsil-checkbox-checker.dent {
  transition: color var(--easing);
}

.Mongsil-checkbox-root.checked > .Mongsil-checkbox-checker.dent {
  color: var(--color-primary);
}

.Mongsil-checkbox-root > .Mongsil-checkbox-checker.dent-outline {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(209, 213, 219, var(--tw-border-opacity));
  transition: border var(--easing), color 200ms var(--easing),
      box-shadow var(--easing);
}

.Mongsil-checkbox-root.checked > .Mongsil-checkbox-checker.dent-outline {
  border-color: transparent;
  color: var(--color-primary);
}

.Mongsil-checkbox-root .Mongsil-checkbox-icon {
  width: 0.75rem;
}

.Mongsil-checkbox-root > label {
  margin-left: 0.75rem;
  cursor: pointer;
}

.Mongsil-checkbox-root.disabled {
  cursor: not-allowed !important;
}

.Mongsil-checkbox-root.disabled > .Mongsil-checkbox-checker {
  cursor: not-allowed !important;
  --tw-bg-opacity: 1 !important;
  background-color: rgba(229, 231, 235, var(--tw-bg-opacity)) !important;
  --tw-text-opacity: 1 !important;
  color: rgba(156, 163, 175, var(--tw-text-opacity)) !important;
}

.Mongsil-checkbox-root.disabled .Mongsil-checkbox-icon {
  cursor: not-allowed !important;
  --tw-text-opacity: 1 !important;
  color: rgba(209, 213, 219, var(--tw-text-opacity)) !important;
}

.Mongsil-checkbox-root.disabled .Mongsil-checkbox-label {
  cursor: not-allowed !important;
  --tw-text-opacity: 1 !important;
  color: rgba(156, 163, 175, var(--tw-text-opacity)) !important;
}

/* ===== radio ===== */

.Mongsil-radio-root {
  position: relative;
  display: inline-flex;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  padding: 0.5rem;
}

.Mongsil-radio-root > .Mongsil-radio-base {
  -webkit-appearance: none;
          appearance: none;
}

.Mongsil-radio-root > .Mongsil-radio-checker {
  position: relative;
  display: inline-flex;
  height: 1.25rem;
  width: 1.25rem;
  align-items: center;
  justify-content: center;
  border-radius: 9999px;
  background-color: var(--color-base);
  --tw-text-opacity: 1;
  color: rgba(209, 213, 219, var(--tw-text-opacity));
}

.Mongsil-radio-root > .Mongsil-radio-checker > .Mongsil-radio-checker-outer {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 9999px;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(209, 213, 219, var(--tw-border-opacity));
  width: 14px;
  height: 14px;
  transition: border-color var(--easing);
}

.Mongsil-radio-root
    .Mongsil-radio-base:checked
    + .Mongsil-radio-checker
    > .Mongsil-radio-checker-outer {
  border-color: var(--color-primary);
}

.Mongsil-radio-root > .Mongsil-radio-checker .Mongsil-radio-checker-inner {
  transition-property: transform;
  transition-timing-function: ease-in-out;
  transition-duration: 200ms;
  border-radius: 9999px;
  background-color: var(--color-primary);
  width: 6px;
  height: 6px;
  transform: scale(0);
}

.Mongsil-radio-root
    > .Mongsil-radio-base:checked
    + .Mongsil-radio-checker
    .Mongsil-radio-checker-inner {
  transform: scale(1);
}

.Mongsil-radio-root > .Mongsil-radio-label {
  margin-left: 0.75rem;
  cursor: pointer;
}

/* emboss */

.Mongsil-radio-root > .Mongsil-radio-checker.emboss {
  box-shadow: var(--emboss-200);
}

.Mongsil-radio-root
    .Mongsil-radio-base:checked
    + .Mongsil-radio-checker.emboss {
  box-shadow: var(--emboss-0);
}

/* dent */

.Mongsil-radio-root > .Mongsil-radio-checker.dent {
  box-shadow: var(--dent-0);
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(209, 213, 219, var(--tw-border-opacity));
  transition: box-shadow var(--easing), border-color var(--easing);
}

.Mongsil-radio-root
    .Mongsil-radio-base:checked
    + .Mongsil-radio-checker.dent {
  box-shadow: var(--dent-100);
  border-color: transparent;
}

.Mongsil-radio-root
    > .Mongsil-radio-checker.dent
    .Mongsil-radio-checker-outer, .Mongsil-radio-root
    > .Mongsil-radio-base:checked
    + .Mongsil-radio-checker.dent
    .Mongsil-radio-checker-outer {
  border-style: none;
}

.Mongsil-radio-root
    > .Mongsil-radio-base:checked
    + .Mongsil-radio-checker.dent
    .Mongsil-radio-checker-inner {
  --tw-scale-x: 1.5;
  --tw-scale-y: 1.5;
}

.Mongsil-radio-root.disabled, .Mongsil-radio-root.disabled .Mongsil-radio-label {
  cursor: not-allowed !important;
  --tw-text-opacity: 1 !important;
  color: rgba(156, 163, 175, var(--tw-text-opacity)) !important;
}

.Mongsil-radio-root.disabled .Mongsil-radio-checker {
  cursor: not-allowed !important;
  --tw-bg-opacity: 1 !important;
  background-color: rgba(229, 231, 235, var(--tw-bg-opacity)) !important;
  --tw-text-opacity: 1 !important;
  color: rgba(156, 163, 175, var(--tw-text-opacity)) !important;
}

.Mongsil-radio-root.disabled .Mongsil-radio-checker-inner {
  --tw-bg-opacity: 1 !important;
  background-color: rgba(209, 213, 219, var(--tw-bg-opacity)) !important;
}

.Mongsil-radio-root.disabled, .Mongsil-radio-checker > .Mongsil-radio-checker-outer, .Mongsil-radio-root.disabled
    .Mongsil-radio-base:checked
    + .Mongsil-radio-checker
    > .Mongsil-radio-checker-outer {
  --tw-border-opacity: 1;
  border-color: rgba(209, 213, 219, var(--tw-border-opacity));
}

/* ===== switch ===== */

.Mongsil-switch-root {
  position: relative;
  display: inline-flex;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  padding: 0.5rem;
}

.Mongsil-switch-root > .Mongsil-switch-base {
  -webkit-appearance: none;
          appearance: none;
}

.Mongsil-switch-root > .Mongsil-switch-bg {
  position: relative;
  display: flex;
  height: 1.5rem;
  width: 2.75rem;
  align-items: center;
  border-radius: 9999px;
}

.Mongsil-switch-root > .Mongsil-switch-bg.dent {
  box-shadow: var(--dent-100);
}

.Mongsil-switch-root > .Mongsil-switch-bg.emboss {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(209, 213, 219, var(--tw-border-opacity));
}

.Mongsil-switch-root .Mongsil-switch-checker {
  display: inline-flex;
  height: 1rem;
  width: 1rem;
  align-items: center;
  justify-content: center;
  border-radius: 9999px;
  position: absolute;
  --tw-bg-opacity: 1;
  background-color: rgba(209, 213, 219, var(--tw-bg-opacity));
  left: 4px;
  transition: transform 200ms ease-in-out, background-color 200ms ease-in-out;
}

.Mongsil-switch-root .Mongsil-switch-bg.emboss .Mongsil-switch-checker {
  box-shadow: var(--emboss-200);
}

.Mongsil-switch-root
    .Mongsil-switch-base:checked
    + .Mongsil-switch-bg
    .Mongsil-switch-checker {
  background-color: var(--color-primary);
  transform: translateX(20px);
}

.Mongsil-switch-root.disabled .Mongsil-switch-bg {
  cursor: not-allowed !important;
  --tw-bg-opacity: 1 !important;
  background-color: rgba(229, 231, 235, var(--tw-bg-opacity)) !important;
}

.Mongsil-switch-root.disabled
    .Mongsil-switch-base:checked
    + .Mongsil-switch-bg
    .Mongsil-switch-checker, .Mongsil-switch-root.disabled
    .Mongsil-switch-base
    + .Mongsil-switch-bg
    .Mongsil-switch-checker {
  --tw-bg-opacity: 1;
  background-color: rgba(209, 213, 219, var(--tw-bg-opacity));
  --tw-shadow: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

/* ===== select ===== */

.Mongsil-form_item-root.Mongsil-select-root .Mongsil-form_item-label {
  padding-bottom: 0.5rem;
}

.Mongsil-select-root {
  position: relative;
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.Mongsil-select-root > .Mongsil-select-value-container {
  display: flex;
  cursor: pointer;
  align-items: center;
  justify-content: space-between;
  border-radius: 0.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(209, 213, 219, var(--tw-border-opacity));
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.Mongsil-select-root .Mongsil-select-value {
  display: inline-flex;
  line-height: 1.5;
  height: 1.5rem;
  min-width: 3rem;
}

.Mongsil-select-root .Mongsil-select-icon {
  margin-left: 0.5rem;
  -webkit-appearance: none;
          appearance: none;
}

.Mongsil-select-root .Mongsil-select-float-container {
  position: relative;
  width: 100%;
}

.Mongsil-select-root .Mongsil-select-float-panel {
  position: absolute;
  left: 0px;
  z-index: 10;
  width: 100%;
  cursor: pointer;
  border-bottom-right-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
  --tw-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  top: 0;
  -webkit-backdrop-filter: blur(2px);
          backdrop-filter: blur(2px);
  background: hsl(var(--color-base-deg) 22% 95% / 70%);
  box-sizing: border-box;
  transform-origin: top;
  display: none;
  min-height: 40px;
  max-height: 160px;
  overflow-y: auto;
  overflow-x: hidden;
}

.Mongsil-select-root .Mongsil-select-float-panel.animate-visible-panel {
  display: block;
}

.Mongsil-select-root.disabled {
  --tw-bg-opacity: 1;
  background-color: rgba(229, 231, 235, var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(156, 163, 175, var(--tw-text-opacity));
}

.Mongsil-select-root.disabled > .Mongsil-select-value-container, .Mongsil-select-root.disabled button {
  cursor: not-allowed;
}

.Mongsil-select-root.disabled .Mongsil-select-icon svg {
  --tw-text-opacity: 1;
  color: rgba(156, 163, 175, var(--tw-text-opacity));
}

/* ===== select.option ===== */

.Mongsil-option-root {
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.Mongsil-option-root:hover,
  .Mongsil-option-root.selected {
  background: hsl(var(--color-primary-deg) 100% 72% / 10%);
}

.Mongsil-option-root.selected {
  font-weight: 700;
}

/* ===== form-item ===== */

.Mongsil-form_item-root {
  position: relative;
  display: flex;
}

.Mongsil-form_item-root .Mongsil-form_item-container {
  position: relative;
}

/* label */

.Mongsil-form_item-root .Mongsil-form_item-label {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.Mongsil-form_item-root.flex-col .Mongsil-form_item-label {
  padding-bottom: 0.5rem;
}

.Mongsil-form_item-root.flex-row .Mongsil-form_item-label > span {
  display: inline-block;
  padding-top: 0.5rem;
  padding-right: 0.5rem;
}

/* helper text */

.Mongsil-form_item-root .Mongsil-form_item-helper_text {
  margin-top: 0.25rem;
  font-size: 0.75rem;
  line-height: 1rem;
}

/* error message */

.Mongsil-form_item-root .Mongsil-form_item-error_message {
  margin-top: 0.25rem;
  font-size: 0.75rem;
  line-height: 1rem;
  color: var(--color-error);
}

.Mongsil-form_item-root.disabled .Mongsil-form_item-label, .Mongsil-form_item-root.disabled .Mongsil-form_item-helper_text, .Mongsil-form_item-root.disabled .Mongsil-form_item-error_message {
  cursor: not-allowed !important;
  --tw-text-opacity: 1 !important;
  color: rgba(156, 163, 175, var(--tw-text-opacity)) !important;
}

/* ===== Layout ===== */

.Mongsil-layout-root {
  position: relative;
  display: grid;
}

.visible {
  visibility: visible;
}

.ml-1 {
  margin-left: 0.25rem;
}

.ml-10 {
  margin-left: 2.5rem;
}

.flex {
  display: flex;
}

.table {
  display: table;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.h-20 {
  height: 5rem;
}

.h-80 {
  height: 20rem;
}

.w-20 {
  width: 5rem;
}

.flex-grow {
  flex-grow: 1;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8,0,1,1);
  }

  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0,0,0.2,1);
  }
}

@keyframes visible-panel {
  0% {
    visibility: hidden;
    opacity: 0;
    transform: scaleY(0);
  }

  10% {
    visibility: visible;
  }

  100% {
    opacity: 1;
    transform: scaleY(1);
  }
}

.animate-visible-panel {
  animation: visible-panel 200ms cubic-bezier(0.25, 1, 0.5, 1) forwards;
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}

.border {
  border-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-gray-500 {
  --tw-border-opacity: 1;
  border-color: rgba(107, 114, 128, var(--tw-border-opacity));
}

.bg-base {
  background-color: var(--color-base);
}

.p-5 {
  padding: 1.25rem;
}

.pb-2 {
  padding-bottom: 0.5rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.font-bold {
  font-weight: 700;
}

.text-gray-400 {
  --tw-text-opacity: 1;
  color: rgba(156, 163, 175, var(--tw-text-opacity));
}

.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

.text-error {
  color: var(--color-error);
}

*, ::before, ::after {
  --tw-shadow: 0 0 #0000;
}

*, ::before, ::after {
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
}

.filter {
  --tw-blur: var(--tw-empty,/*!*/ /*!*/);
  --tw-brightness: var(--tw-empty,/*!*/ /*!*/);
  --tw-contrast: var(--tw-empty,/*!*/ /*!*/);
  --tw-grayscale: var(--tw-empty,/*!*/ /*!*/);
  --tw-hue-rotate: var(--tw-empty,/*!*/ /*!*/);
  --tw-invert: var(--tw-empty,/*!*/ /*!*/);
  --tw-saturate: var(--tw-empty,/*!*/ /*!*/);
  --tw-sepia: var(--tw-empty,/*!*/ /*!*/);
  --tw-drop-shadow: var(--tw-empty,/*!*/ /*!*/);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

@media (min-width: 640px) {
}

@media (min-width: 768px) {
}

@media (min-width: 1024px) {
}

@media (min-width: 1280px) {
}

@media (min-width: 1536px) {
}
